<!--
 * Copyright (C) 2022 Jaden Phil Nebel (Onionware)
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, version 3.
 * 
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License along with this program. If not, see <https://www.gnu.org/licenses/>
-->

<Page
    x:Class="OnionMedia.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:m="using:OnionMedia.Core.Models"
    xmlns:g="using:OnionMedia"
    xmlns:ext="using:CommunityToolkit.WinUI.UI"
    xmlns:ctc="using:CommunityToolkit.WinUI.UI.Controls"
    mc:Ignorable="d"
    x:DefaultBindMode="TwoWay"
    Style="{StaticResource PageStyle}">
    <Page.Resources>
        <ResourceDictionary Source="../XamlDicts/ExternalResources.xaml"/>
    </Page.Resources>
    <ScrollViewer x:Name="ContentArea" VerticalScrollBarVisibility="Auto" Padding="24,0">
        <StackPanel Margin="{StaticResource XSmallTopMargin}">
            <!-- <StackPanel Margin="{StaticResource SmallTopBottomMargin}">
            <TextBlock x:Uid="Settings_Personalization" Style="{ThemeResource SubtitleTextBlockStyle}" />
                <TextBlock x:Uid="Settings_Theme" />

                <StackPanel Margin="{StaticResource XSmallTopMargin}">
                    <RadioButton
                        x:Uid="Settings_Theme_Light"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}"
                        FontSize="15"
                        GroupName="AppTheme">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Light</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                    <RadioButton
                        x:Uid="Settings_Theme_Dark"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}"
                        FontSize="15"
                        GroupName="AppTheme">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Dark</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                    <RadioButton
                        x:Uid="Settings_Theme_Default"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}"
                        IsChecked="{x:Bind ViewModel.ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}"
                        FontSize="15"
                        GroupName="AppTheme">
                        <RadioButton.CommandParameter>
                            <xaml:ElementTheme>Default</xaml:ElementTheme>
                        </RadioButton.CommandParameter>
                    </RadioButton>
                </StackPanel>
            </StackPanel> -->

            <StackPanel Margin="{StaticResource MediumBottomMargin}" Spacing="10">
                <TextBlock x:Uid="/SettingsPage/storagePaths" Style="{StaticResource SubtitleTextBlockStyle}"/>
                <StackPanel HorizontalAlignment="Left" Spacing="10" MaxWidth="550">
                    <ctc:DockPanel>
                        <Button VerticalAlignment="Bottom"
                                ctc:DockPanel.Dock="Right"
                                Margin="5,0"
                                Command="{x:Bind ViewModel.ChangePathCommand, Mode=OneTime}"
                                CommandParameter="{x:Bind m:PathType.ConvertedVideofiles, Mode=OneTime}">
                            <SymbolIcon Symbol="OpenLocal"/>
                        </Button>
                        <TextBox x:Uid="/SettingsPage/convertedVideos" Text="{x:Bind m:AppSettings.Instance.ConvertedVideoSavePath, Mode=OneWay}" IsReadOnly="True"/>
                    </ctc:DockPanel>
                    <ctc:DockPanel>
                        <Button VerticalAlignment="Bottom"
                                ctc:DockPanel.Dock="Right"
                                Margin="5,0"
                                Command="{x:Bind ViewModel.ChangePathCommand, Mode=OneTime}"
                                CommandParameter="{x:Bind m:PathType.ConvertedAudiofiles, Mode=OneTime}">
                            <SymbolIcon Symbol="OpenLocal"/>
                        </Button>
                        <TextBox x:Uid="/SettingsPage/convertedAudios" Text="{x:Bind m:AppSettings.Instance.ConvertedAudioSavePath, Mode=OneWay}" IsReadOnly="True"/>
                    </ctc:DockPanel>
                    <ctc:DockPanel>
                        <Button VerticalAlignment="Bottom"
                                ctc:DockPanel.Dock="Right"
                                Margin="5,0"
                                Command="{x:Bind ViewModel.ChangePathCommand, Mode=OneTime}"
                                CommandParameter="{x:Bind m:PathType.DownloadedVideofiles, Mode=OneTime}">
                            <SymbolIcon Symbol="OpenLocal"/>
                        </Button>
                        <TextBox x:Uid="/SettingsPage/downloadedVideos" Text="{x:Bind m:AppSettings.Instance.DownloadsVideoSavePath, Mode=OneWay}" IsReadOnly="True"/>
                    </ctc:DockPanel>
                    <ctc:DockPanel>
                        <Button VerticalAlignment="Bottom"
                                ctc:DockPanel.Dock="Right"
                                Margin="5,0"
                                Command="{x:Bind ViewModel.ChangePathCommand, Mode=OneTime}"
                                CommandParameter="{x:Bind m:PathType.DownloadedAudiofiles, Mode=OneTime}">
                            <SymbolIcon Symbol="OpenLocal"/>
                        </Button>
                        <TextBox x:Uid="/SettingsPage/downloadedAudios" Text="{x:Bind m:AppSettings.Instance.DownloadsAudioSavePath, Mode=OneWay}" IsReadOnly="True"/>
                    </ctc:DockPanel>
                    <TextBox x:Name="filenameSuffix"
                             x:Uid="/SettingsPage/filenameSuffix"
                             Text="{x:Bind m:AppSettings.Instance.ConvertedFilenameSuffix}"
                             ext:TextBoxExtensions.Regex="{x:Bind g:GlobalResources.INVALIDFILENAMECHARACTERSREGEX, Mode=OneTime}"
                             ext:TextBoxExtensions.IsValid="{x:Bind ViewModel.InvalidFilename}"/>
                    <TeachingTip x:Uid="/SettingsPage/forbiddenChars"
                                 Target="{x:Bind filenameSuffix, Mode=OneTime}"
                                 IsOpen="{x:Bind ViewModel.InvalidFilename, Mode=OneWay}">
                        <TeachingTip.IconSource>
                            <SymbolIconSource Symbol="Cancel"/>
                        </TeachingTip.IconSource>
                    </TeachingTip>
                </StackPanel>


                <TextBlock x:Uid="/SettingsPage/convertAndDownloadSettings" Style="{StaticResource SubtitleTextBlockStyle}" Margin="{StaticResource XSmallTopMargin}"/>
                <ComboBox x:Uid="/SettingsPage/amountOfSimultaneousOperations" SelectedItem="{x:Bind m:AppSettings.Instance.SimultaneousOperationCount}">
                    <x:Int32>1</x:Int32>
                    <x:Int32>2</x:Int32>
                    <x:Int32>3</x:Int32>
                    <x:Int32>4</x:Int32>
                    <x:Int32>5</x:Int32>
                </ComboBox>

                <CheckBox x:Name="limitDownloadSpeed" x:Uid="/SettingsPage/limitDownloadSpeed" Margin="{StaticResource XSmallTopMargin}" IsChecked="{x:Bind m:AppSettings.Instance.LimitDownloadSpeed}"/>
                <StackPanel Orientation="Horizontal" Spacing="5" Visibility="{x:Bind limitDownloadSpeed.IsChecked, Mode=OneWay}">
                    <NumberBox x:Uid="/SettingsPage/maxDownloadSpeedPerFile" Value="{x:Bind m:AppSettings.Instance.MaxDownloadSpeed}" Minimum="0.1"/>
                    <TextBlock Text="MBit/s" VerticalAlignment="Bottom" Margin="3,5"/>
                </StackPanel>

                <CheckBox x:Uid="/SettingsPage/fallbackToSoftwareEncoding" IsChecked="{x:Bind m:AppSettings.Instance.FallBackToSoftwareEncoding}"/>
                <CheckBox x:Name="convertToH264" x:Uid="/SettingsPage/autoConvertToH264" IsChecked="{x:Bind m:AppSettings.Instance.AutoConvertToH264AfterDownload}"/>
                <StackPanel Visibility="{x:Bind convertToH264.IsChecked, Mode=OneWay}">
                    <CheckBox x:Name="useHwAccelerated" x:Uid="/SettingsPage/useHwAccelerated" Margin="15,0" IsChecked="{x:Bind m:AppSettings.Instance.UseHardwareAcceleratedEncoding}"/>
                    <ComboBox x:Uid="/SettingsPage/hardwareEncoder" Margin="15,0" ItemsSource="{x:Bind g:GlobalResources.HardwareEncoders, Mode=OneTime}" SelectedItem="{x:Bind m:AppSettings.Instance.HardwareEncoder}" Visibility="{x:Bind useHwAccelerated.IsChecked, Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate x:DataType="m:HardwareEncoder">
                                <ContentPresenter Content="{x:Bind Converter={StaticResource EnumDisplayNameConverter}, Mode=OneTime}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <m:HardwareEncoder>0</m:HardwareEncoder>
                        <m:HardwareEncoder>1</m:HardwareEncoder>
                        <m:HardwareEncoder>2</m:HardwareEncoder>
                    </ComboBox>
                </StackPanel>
                <ComboBox x:Uid="/SettingsPage/audioDownloadFormat" ItemsSource="{x:Bind g:GlobalResources.AudioConversionFormats, Mode=OneTime}" SelectedItem="{x:Bind m:AppSettings.Instance.DownloadsAudioFormat}"/>

                <TextBlock x:Uid="/SettingsPage/threadsForConversion"/>
                <CheckBox x:Name="autoSelectThreadCount" x:Uid="/SettingsPage/autoSelectThreadCount" IsChecked="{x:Bind m:AppSettings.Instance.AutoSelectThreadsForConversion}"/>
                <StackPanel Orientation="Horizontal" Spacing="15" Visibility="{x:Bind autoSelectThreadCount.IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True, Mode=OneWay}">
                    <NumberBox Value="{x:Bind m:AppSettings.Instance.MaxThreadCountForConversion}"
                               Minimum="1"
                               Maximum="{x:Bind g:GlobalResources.SystemThreadCount, Mode=OneTime}"
                               NumberFormatter="{x:Bind RoundingFormatter, Mode=OneTime}"/>
                    <TextBlock VerticalAlignment="Center">
                        <Run Text="/  "/>
                        <Run Text="{x:Bind g:GlobalResources.SystemThreadCount, Mode=OneTime}"/>
                    </TextBlock>
                </StackPanel>

                <TextBlock x:Uid="/SettingsPage/notifications" Style="{StaticResource SubtitleTextBlockStyle}" Margin="{StaticResource SmallTopBottomMargin}"/>
                <ToggleSwitch x:Uid="/SettingsPage/notifyAfterConversion" IsOn="{x:Bind m:AppSettings.Instance.SendMessageAfterConversion}"/>
                <ToggleSwitch x:Uid="/SettingsPage/notifyAfterDownload" IsOn="{x:Bind m:AppSettings.Instance.SendMessageAfterDownload}"/>
            </StackPanel>

            <TextBlock x:Uid="Settings_About" Style="{ThemeResource SubtitleTextBlockStyle}" />

            <StackPanel Margin="{StaticResource XSmallTopMargin}">
                <TextBlock Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}" Style="{ThemeResource BodyTextBlockStyle}" />

                <TextBlock
                    x:Uid="Settings_AboutDescription"
                    Margin="{StaticResource XSmallTopMargin}"
                    Style="{ThemeResource BodyTextBlockStyle}" />
                <StackPanel Orientation="Horizontal" Spacing="10" Margin="{StaticResource SmallTopBottomMargin}">
                    <HyperlinkButton x:Uid="SettingsPage_PrivacyTermsLink"/>
                    <HyperlinkButton Content="Third-Party" Click="HyperlinkButton_Click"/>
                </StackPanel>
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</Page>