<!--
 * Copyright (C) 2022 Jaden Phil Nebel (Onionware)
 *
 * This file is part of OnionMedia.
 * OnionMedia is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, version 3.

 * OnionMedia is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.
 
 * You should have received a copy of the GNU Affero General Public License along with OnionMedia. If not, see <https://www.gnu.org/licenses/> .
-->

<Page
    x:Name="shellPage"
    x:Class="OnionMedia.Views.ShellPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:helpers="using:OnionMedia.Helpers"
    xmlns:behaviors="using:OnionMedia.Behaviors"
    xmlns:local="using:OnionMedia"
    xmlns:c="using:OnionMedia.Core"
    xmlns:e="using:OnionMedia.Core.Enums"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    SizeChanged="Page_SizeChanged"
    Loaded="OnLoaded">
    <Page.Resources>
        <ResourceDictionary Source="../XamlDicts/ExternalResources.xaml"/>
    </Page.Resources>
    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="theme">
                <VisualState x:Name="winEleven">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind local:UIResources.RunningOnWin11, Mode=OneTime}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="contentArea.Style" Value="{StaticResource GridStyleWin11}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="defaultStyle">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="True"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="contentArea.Style" Value="{StaticResource ShellGridStyle}"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid x:Name="contentArea">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid x:Name="AppTitleBar" Height="32" Visibility="Collapsed">
                <Image Source="../Assets/OnionMedia_Icon_New.png"
                   HorizontalAlignment="Left" 
                   Width="16" Height="16" 
                   Margin="16,0"/>
                <TextBlock x:Name="AppTitleTextBlock" Text="OnionMedia"
                       Style="{StaticResource CaptionTextBlockStyle}" 
                       VerticalAlignment="Center"
                       Margin="40,0,0,0"/>
            </Grid>

            <TeachingTip x:Name="shutdownFlyout"
                         x:Uid="shutdownFlyout"
                         IsOpen="{x:Bind ViewModel.ShutdownTipIsOpen, Mode=TwoWay}"
                         PreferredPlacement="BottomLeft"
                         ActionButtonClick="ShutdownFlyout_OnActionButtonClick"
                         CloseButtonClick="ShutdownFlyout_OnCloseButtonClick">
                <TeachingTip.Content>
                    <StackPanel x:Name="powerFlyoutPanel">
                        <ComboBox x:Name="actionSelector" Margin="0,10" ItemsSource="{x:Bind ViewModel.PowerOptions}" SelectedItem="{x:Bind ViewModel.SelectedPowerOption, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate x:DataType="e:PCPowerOption">
                                    <ContentPresenter Content="{x:Bind Converter={StaticResource ResourceNameToTextConverter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <CheckBox x:Uid="executeOnErrors" IsChecked="{x:Bind ViewModel.ExecuteOnError, Mode=TwoWay}"/>
                    </StackPanel>
                </TeachingTip.Content>
            </TeachingTip>
            <NavigationView
        x:Name="navigationView"
        Grid.Row="1"
        IsBackButtonVisible="Collapsed"
        IsPaneOpen="False"
        IsBackEnabled="{x:Bind ViewModel.IsBackEnabled, Mode=OneWay}"
        SelectedItem="{x:Bind ViewModel.Selected, Mode=OneWay}"
        IsSettingsVisible="True"
        DisplayModeChanged="NavigationView_OnDisplayModeChanged"
        ExpandedModeThresholdWidth="1280"
        Header="{x:Bind ((ContentControl)ViewModel.Selected).Content, Mode=OneWay}">
                <NavigationView.MenuItems>
                    <!--
            TODO WTS: Change the symbols for each item as appropriate for your app
            More on Segoe UI Symbol icons: https://docs.microsoft.com/windows/uwp/style/segoe-ui-symbol-font
            Or to use an IconElement instead of a Symbol see https://github.com/Microsoft/WindowsTemplateStudio/blob/release/docs/UWP/projectTypes/navigationpane.md
            Edit String/en-US/Resources.resw: Add a menu item title for each page
            -->
                    <NavigationViewItem x:Uid="Shell_Media" Icon="Play" helpers:NavHelper.NavigateTo="OnionMedia.Core.ViewModels.MediaViewModel" />
                    <NavigationViewItem x:Uid="Shell_YouTubeDownloader" Icon="Download" helpers:NavHelper.NavigateTo="OnionMedia.Core.ViewModels.YouTubeDownloaderViewModel" />
                    <!-- <NavigationViewItem x:Uid="Shell_Playlists" Icon="List" helpers:NavHelper.NavigateTo="OnionMedia.Core.ViewModels.PlaylistsViewModel" /> -->
                </NavigationView.MenuItems>
                <NavigationView.HeaderTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <TextBlock
                        Text="{Binding}"
                        Style="{ThemeResource TitleTextBlockStyle}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                </NavigationView.HeaderTemplate>
                <i:Interaction.Behaviors>
                    <behaviors:NavigationViewHeaderBehavior
                DefaultHeader="{x:Bind ((ContentControl)ViewModel.Selected).Content, Mode=OneWay}">
                        <behaviors:NavigationViewHeaderBehavior.DefaultHeaderTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <TextBlock Text="{Binding}" Style="{ThemeResource TitleTextBlockStyle}"  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    <Button Click="ShutdownBtn_OnClick" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-30,10,0" Visibility="{Binding ViewModel.ShowHeaderPowerButton, ElementName=shellPage}">
                                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="{Binding Glyph, ElementName=shutdownIcon}" Foreground="{Binding Foreground, ElementName=shutdownIcon}"/>
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </behaviors:NavigationViewHeaderBehavior.DefaultHeaderTemplate>
                    </behaviors:NavigationViewHeaderBehavior>
                </i:Interaction.Behaviors>
                <NavigationView.PaneFooter>
                    <NavigationViewItem Tapped="ShutdownBtn_OnClick" Visibility="{x:Bind ViewModel.ShowHeaderPowerButton, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}">
                        <NavigationViewItem.Icon>
                            <FontIcon x:Name="shutdownIcon" FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE7E8;"/>
                        </NavigationViewItem.Icon>
                    </NavigationViewItem>
                </NavigationView.PaneFooter>
                <controls:DockPanel>
                    <StackPanel controls:DockPanel.Dock="Top" HorizontalAlignment="Right" Orientation="Horizontal" Spacing="5" Height="30">
                        <TextBlock Visibility="{x:Bind c:GlobalResources.IS_DEBUG}">
                            <Run>X:</Run>
                            <Run Text="{x:Bind PageWidth, Mode=OneWay}"/>
                        </TextBlock>
                        <TextBlock Visibility="{x:Bind c:GlobalResources.IS_DEBUG}">
                            <Run>Y:</Run>
                            <Run Text="{x:Bind PageHeight, Mode=OneWay}"/>
                        </TextBlock>
                    </StackPanel>
                    <Frame x:Name="shellFrame" />
                </controls:DockPanel>
            </NavigationView>
        </Grid>
    </Grid>
</Page>
